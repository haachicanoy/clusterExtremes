% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/outer_wrapper_fitmaxstab.R
\name{outer_wrapper_fitmaxstab}
\alias{outer_wrapper_fitmaxstab}
\title{Fit smith max-stable model}
\usage{
outer_wrapper_fitmaxstab(fit_info, obs_data, convert = FALSE,
  frech_bool = TRUE, cov_mod, min_common_obs = 10,
  min_pairs = choose(10, 2), sample_bool = FALSE, fit_sample = NULL,
  ...)
}
\arguments{
\item{fit_info}{a data frame which must have columns id, x, y}

\item{obs_data}{a data frame with columns labelled by the station id, and
rows corresponding to block maximum observation at that station,
default assumption is this data is standard frechet}

\item{convert}{boolean to convert the data to standard frechet from GEV
distributed data (default = FALSE)}

\item{frech_bool}{(default = TRUE) is the data frechet distributed, otherwise we
assume loc, scale and shape parameters constant}

\item{cov_mod}{A character string corresponding to the covariance model in the
max-stable representation. See SpatialExtremes::fitmaxstab() documentation.}

\item{min_common_obs}{minimum number of common pairwise observations,
weight is set to zero in fitting otherwise (default is 10)}

\item{min_pairs}{set a minimum number of pairs needed for fitting (default is choose(10,2))}

\item{sample_bool}{repeat fitting for samples of stations (default is FALSE)}

\item{fit_sample}{a matrix for columns for the different samples to fit,
the rows are the indexes of stations from fit_info to sample}
}
\value{
Returns a list of fitted max-stable models
}
\description{
Fit smith max-stable model
}
\examples{
n.site <- 60
locations <- matrix(runif(2*n.site, 0, 10), ncol = 2)
id <- paste("ID", as.character(1:n.site), sep = "")
fit_info <- data.frame(x = locations[,1],
                       y = locations[,2],
                       id,
                       stringsAsFactors = FALSE)
sim_data <- SpatialExtremes::rmaxstab(100, locations, cov.mod = "gauss",
                  cov11 = 1, cov12 = 0, cov22 = 1)
sim_data <- data.frame(sim_data)
names(sim_data) <- id

fitM = outer_wrapper_fitmaxstab(fit_info = fit_info,
                obs_data = sim_data,
                cov_mod = "gauss")

start_list = list(cov11=1, cov12 = 0, cov22 = 1)
fitM_start = outer_wrapper_fitmaxstab(fit_info = fit_info,
                obs_data = sim_data,
                cov_mod = "gauss",
                start = start_list)

fit_sample = get_samples(n = nrow(fit_info),
                 sample_type = "partition",
                 num_partitions = 2)

eg1_model_list = outer_wrapper_fitmaxstab(fit_info = fit_info, obs_data = sim_data,
                cov_mod = "gauss", sample_bool = TRUE,
                fit_sample = fit_sample, start = start_list)

fit_sample = get_samples(n = nrow(fit_info),
                 sample_type = "percentage",
                 num_samples = 2, percentage = 80)

eg2_model_list = outer_wrapper_fitmaxstab(fit_info = fit_info, obs_data = sim_data,
                cov_mod = "gauss", sample_bool = TRUE,
                fit_sample = fit_sample)

}
