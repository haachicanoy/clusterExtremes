% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classify_with_kknn.R
\name{classify_with_kknn}
\alias{classify_with_kknn}
\title{Classify a grid using weighted k nearest neighbours}
\usage{
classify_with_kknn(points_train, points_classify, knn_value, kernel = "inv",
  distance = 2)
}
\arguments{
\item{points_train}{a data frame of coordinates with columns
labelled x and y and a cluster_id
the forumula for classification, is cluster_id ~ x + y + xy}

\item{points_classify}{a data frame of coordinates for classification,
with columns labelled x and y}

\item{knn_value}{the numbere of k nearest neighbours to consider}

\item{kernel}{the type of kernel used in kknn(), see documentation.
Default is "inv" for inverse distance weighted}

\item{distance}{parameter associated with the minokowski distance,
we use a default of 2 for euclidean}
}
\value{
points_classify with a new column
for the classification, class_id and a new columns giving the majority
probability for this classification
}
\description{
Function takes a set of points that have been clustered,
and then classifys the grid.
}
\examples{

set.seed(1)
n.site <- 60
coords <-data.frame(x = runif(n.site, 0, 10), y = runif(n.site, 0, 10))
grid_domain = get_grid_for_classification(coords = coords,
     restrict_aus = FALSE)

coords$cluster_id = 1
coords$cluster_id[coords$x < 4] = 2

grid_ouput = classify_with_kknn(points_train = coords,
       points_classify = grid_domain,
 knn_value = 3)

grid_classified = grid_output[[1]]
plot(grid_classified$x, grid_classified$y, col = grid_classified$class_id,
     pch = 3)
points(coords, col = coords$cluster_id, pch = 20)

}
